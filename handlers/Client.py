from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.dispatcher.filters import Text
from Keyboards import *
from CreateBot import bot
from variables import url_images, commands
from data_base.sqlite_db import *
from re import findall


# –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
class FSMclient(StatesGroup):
    start_menu = State()


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ –≤–≤–æ–¥ @ThisCafeShopBot - –æ—Ç–∫—Ä—ã—Ç–∏–µ –∏–Ω–ª–∞–π–Ω-–º–µ–Ω—é
async def send_inline_kb(query: types.InlineQuery):
    await bot.answer_inline_query(inline_query_id=query.id, results=inline_kb(), cache_time=1)


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ /start - –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, —É–¥–∞–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —á–∞—Ç–∞ –∏ –æ—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã flag
async def send_start(message: types.Message, state: FSMContext):
    await message.delete()
    await state.finish()
    await bot.send_sticker(message.from_user.id, url_images['start_sticker'])
    await message.answer(
        f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Ä–µ—Å—Ç–æ—Ä–∞–Ω-–±–æ—Ç, {message.from_user.full_name}! üôÇ\n\n–í—ã–±–µ—Ä–∏—Ç–µ <b>–∫–∞—Ç–µ–≥–æ—Ä–∏—é</b> ‚ÜòÔ∏è',
        reply_markup=start_commands(), parse_mode='html')
    for i in await sql_read_flag_all(message.chat.username):
        try:
            await bot.delete_message(message.chat.id, i[1])
        except:
            continue
    await sql_clear_username_flag(message.chat.username)


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /help - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è –±–æ—Ç–∞
async def send_help(message: types.Message):
    await bot.send_message(message.from_user.id, text=commands['help_info'], reply_markup=keyboard_hide(),
                           parse_mode='html')
    await message.delete()


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /description - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ
async def send_description(message: types.Message):
    await bot.send_photo(message.from_user.id, url_images['description_main'], caption=commands['description_cafe'],
                         reply_markup=discription_keyboard(), parse_mode='html')
    await message.delete()


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /cart - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã
async def read_cart(message: types.Message, state: FSMContext, button=False):
    await bot.delete_message(message.chat.id, message.message_id)
    if await state.get_state() is None:
        button = True
    cart = dict()
    try:
        for i, j in enumerate(await sql_read_cart(message.chat.username), 1):
            cart[f'{i}) {j[0]}'] = j[1]
        position = '\n'.join([f"{i[0]} - {i[1]} —Ä—É–±." for i in cart.items()])
        if not cart:
            await message.answer('üß∫ –°–µ–π—á–∞—Å –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. –î–æ–±–∞–≤—å—Ç–µ —á—Ç–æ-—Ç–æ –∏–∑ –º–µ–Ω—é ‚¨áÔ∏è',
                                 reply_markup=keyboard_hide(button))
        else:
            await message.answer(f'\n\n{position}\n\n<b>–ò—Ç–æ–≥–æ</b>: {sum(map(float, cart.values()))} —Ä—É–±.',
                                 reply_markup=cart_keyboard(), parse_mode='html')
    except:
        await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ /menu - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –º–µ–Ω—é
async def open_menu(message: types.Message):
    await message.delete()
    await FSMclient.start_menu.set()
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ-—Ç–æ –∏–∑ –Ω–∞—à–µ–≥–æ <b>–º–µ–Ω—é</b> ‚ÜòÔ∏è', reply_markup=expand_menu(), parse_mode='html')


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É "–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é" - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –º–µ–Ω—é
async def opening_menu(callback: types.CallbackQuery):
    await open_menu(callback.message)


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É "–ë—É—Ä–µ–≥—ã", "–ü–∏–∏—Ü–∞" –∏ —Ç.–¥. - –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤—Å–µ –ø–æ–∑–∏—Ü–∏–∏ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async def open_category(message: types.Message):
    await message.delete()
    try:
        for i in await sql_category_menu(message.text):
            await bot.send_photo(message.from_user.id, i[0],
                                 f"–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: <i>{i[1]}</i>\n–û–ø–∏—Å–∞–Ω–∏–µ: <i>{i[2]}</i>\n\n<b>–¶–µ–Ω–∞:</b> {i[3]} —Ä—É–±.",
                                 reply_markup=cart_add_keyboard(), parse_mode='html')
    except:
        await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å—ë" - –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤—Å–µ –ø–æ–∑–∏—Ü–∏–∏ –∏–∑ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
async def open_all_menu(message: types.Message):
    await message.delete()
    try:
        for i in await sql_send_menu():
            await bot.send_photo(message.from_user.id, i[0],
                                 f"–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: <i>{i[1]}</i>\n–û–ø–∏—Å–∞–Ω–∏–µ: <i>{i[2]}</i>\n\n<b>–¶–µ–Ω–∞:</b> {i[3]} —Ä—É–±.",
                                 reply_markup=cart_add_keyboard(), parse_mode='html')
    except:
        await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')


# –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É "–°–∫—Ä—ã—Ç—å"
async def close_keyboard(callback: types.CallbackQuery):
    try:
        await callback.message.delete()
    except:
        return


# –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—á–∏—Å—Ç–∫–∞ –±–∞—â—ã –¥–∞–Ω–Ω—ã—Ö —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ª–∞–π–∫–∞—Ö –∏ –¥–∏–∑–ª–∞–π–∫–∞—Ö
async def close_flag(callback: types.CallbackQuery):
    await callback.message.delete()
    try:
        await sql_clear_flag(callback.message.chat.username, callback.message.message_id)
    except:
        await callback.message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—Ç—Å–æ—Ä–∞–Ω –Ω–∞ –∫–∞—Ä—Ç–µ" - –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ (–∫–∞—Ä—Ç–∞)
async def send_location(callback: types.CallbackQuery):
    await bot.send_location(callback.from_user.id, 55.7522, 37.6156, reply_markup=keyboard_hide())


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è" - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ç–∞–∫—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async def send_contact(callback: types.CallbackQuery):
    await bot.send_contact(callback.from_user.id, '79535542207', 'Bogdan', 'medvedev', reply_markup=keyboard_hide())


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–∞–π–∫–∞—Ö/–¥–∏–∑–ª–∞–π–∫–∞—Ö –≤ –±–∞–∑—É flag –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ —Å–æ–æ—â–µ–Ω–∏—è
async def vote_callback(callback: types.CallbackQuery):
    if not await sql_read_flag(callback.message.chat.username, callback.message.message_id):
        await sql_add_flag(callback.message.chat.username, callback.message.message_id)
        if callback.data == 'like':
            await callback.answer('–í–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å!')
            await callback.message.edit_text('–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –í–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –Ω–∞—à —Ä–µ—Å—Ç–æ—Ä–∞–Ω-–±–æ—Ç ‚ò∫',
                                             reply_markup=voting_result())
        else:
            await callback.answer('–í–∞–º –ù–ï –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å!')
            await callback.message.edit_text('–í–∞–º –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –Ω–∞—à —Ä–µ—Å—Ç–æ—Ä–∞–Ω-–±–æ—Ç', reply_markup=voting_result(False))
    await callback.answer('–í—ã —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏', show_alert=True)


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É"
async def add_cart(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        data['id'] = callback.message.chat.username
        data['name'], = findall(r'—Ç–æ–≤–∞—Ä–∞: (.*)\n', callback.message.caption)
        data['price'], = findall('\d+\.\d+', callback.message.caption)
    try:
        await sql_add_cart(state)
    except:
        await callback.message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')
    await callback.answer('–î–û–ë–ê–í–õ–ï–ù–û!')


# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—ã—Ç–∞–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É, –Ω–∞—Ö–æ–¥—è—Å—å –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –º–µ–Ω—é
async def add_cart_exception(callback: types.CallbackQuery):
    await callback.answer('–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É, —Å–Ω–∞—á–∞–ª–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –º–µ–Ω—é', show_alert=True)


# –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–µ–π –±–∞–∑—ã, —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ "–°–±—Ä–æ—Å –∫–æ—Ä–∑–∏–Ω—ã"
async def clear_cart(callback: types.CallbackQuery):
    await sql_clear_cart(callback.message.chat.username)
    await callback.answer('–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞!')
    await callback.message.delete()


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑" - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –∫–æ—Ä–∑–∏–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ü–µ–Ω–æ—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async def done_order(callback: types.CallbackQuery):
    await callback.message.edit_text(f'<b>–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω</b>! ‚úÖ\n\n<u>–í –≤–∞—à–µ–º –∑–∞–∫–∞–∑–µ:</u>\n'
                                     f'{callback.message.text}', parse_mode='html', reply_markup=keyboard_hide())
    await callback.message.answer('–í–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω-–±–æ—Ç?', reply_markup=voting())
    await sql_clear_cart(callback.message.chat.username)


# –ò–Ω–∏—Ü–∏–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
def client_handler(dp: Dispatcher):
    dp.register_inline_handler(send_inline_kb, state='*')
    dp.register_message_handler(send_start, Text(commands['start_command'], ignore_case=True), state='*')
    dp.register_message_handler(send_help, Text(commands['help_command'], ignore_case=True), state='*')
    dp.register_message_handler(send_description, Text(commands['description_command'], ignore_case=True), state='*')
    dp.register_message_handler(read_cart, Text(commands['cart_command'], ignore_case=True), state='*')
    dp.register_message_handler(open_menu, Text(commands['menu_command'], ignore_case=True), state='*')
    dp.register_message_handler(open_category, Text(commands['categories_menu'], ignore_case=True),
                                state=FSMclient.start_menu)
    dp.register_message_handler(open_all_menu, Text(commands['all_categories'], ignore_case=True),
                                state=FSMclient.start_menu)
    dp.register_callback_query_handler(send_location, text=['map'], state='*')
    dp.register_callback_query_handler(send_contact, text=['contact'], state='*')
    dp.register_callback_query_handler(close_keyboard, text=['close'], state='*')
    dp.register_callback_query_handler(close_flag, text=['close_flag'], state='*')
    dp.register_callback_query_handler(clear_cart, text=['reset'], state='*')
    dp.register_callback_query_handler(add_cart, text=['cart'], state=FSMclient.start_menu)
    dp.register_callback_query_handler(add_cart_exception, text=['cart'], state='*')
    dp.register_callback_query_handler(opening_menu, text=['menu'], state='*')
    dp.register_callback_query_handler(vote_callback, text=['like', 'dislike'], state='*')
    dp.register_callback_query_handler(done_order, text=['register'], state='*')
